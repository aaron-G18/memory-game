{"version":3,"sources":["components/Wrapper/index.js","components/Title/index.js","components/Card/index.js","components/Instructions/index.js","components/Score/index.js","App.js","index.js"],"names":["Wrapper","props","className","children","Title","Card","id","onClick","alt","name","src","image","Instructions","Score","score","highscore","charArr","shuffle","arr","sort","Math","random","App","handleClick","event","preventDefault","thisCharId","target","index","findIndex","element","parseInt","isclicked","alert","map","x","state","setState","this","key","Component","ReactDOM","render","document","getElementById"],"mappings":"8/CAOeA,MAJf,SAAiBC,GACf,OAAO,yBAAKC,UAAU,kCAAkCD,EAAME,W,MCKjDC,MANf,SAAeH,GACb,OACA,wBAAIC,UAAU,SAASD,EAAME,W,MCQhBE,MAVf,SAAcJ,GACZ,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,iBACb,yBAAKI,GAAIL,EAAMK,GAAIC,QAASN,EAAMM,QAASC,IAAKP,EAAMQ,KAAMC,IAAKT,EAAMU,W,MCAhEC,MAJf,SAAsBX,GACpB,OAAO,yBAAKC,UAAU,uCAAuCD,EAAME,W,MCOtDU,MARf,SAAeZ,GACb,OACE,yBAAKC,UAAU,SACjB,wCAAcD,EAAMa,OAAa,0BAAMZ,UAAU,cAAhB,eAA0CD,EAAMc,aCM/EC,E,KAGJ,SAASC,EAAQC,GACfA,EAAIC,MAAK,kBAAMC,KAAKC,SAAW,M,IAmFlBC,E,kDA7Eb,WAAYrB,GAAQ,IAAD,8BACjB,cAAMA,IAmBRsB,YAAc,SAACC,GACbA,EAAMC,iBACN,IAAIC,EAAaF,EAAMG,OAAOrB,GAC1BsB,EAAQZ,EAAQa,WAAU,SAASC,GACrC,OAAOA,EAAQxB,KAAOyB,SAASL,EAAY,OAEZ,SAA7BV,EAAQY,GAAOI,WACjBC,MAAM,uDACNjB,EAAQkB,KAAK,SAAAC,GACX,OAAOA,EAAEH,UAAY,WAEnB,EAAKI,MAAMrB,UAAY,EAAKqB,MAAMtB,OACpC,EAAKuB,SAAS,CACZtB,UAAW,EAAKqB,MAAMtB,QAG1BG,EAAQD,GACR,EAAKqB,SAAS,CACZvB,MAAO,EACPI,IAAKF,MAKPA,EAAQY,GAAOI,UAAY,OAC3Bf,EAAQD,GACR,EAAKqB,SAAS,CACZvB,MAAO,EAAKsB,MAAMtB,MAAQ,EAC1BI,IAAKF,MA9CT,EAAKoB,MAAQ,CACXtB,MAAO,EACPC,UAAW,EACXG,IAAK,IALU,E,gEAajBD,EAAQD,GACRsB,KAAKD,SAAS,CACZnB,IAAKF,M,+BAuCD,IAAD,OACP,OAAS,yBAAKd,UAAU,iCACxB,kBAAC,EAAD,KACE,kBAAC,EAAD,4BACA,6BACA,kBAAC,EAAD,iFACA,6BACA,kBAAC,EAAD,CAAOY,MAAOwB,KAAKF,MAAMtB,MAAOC,UAAWuB,KAAKF,MAAMrB,YACrDuB,KAAKF,MAAMlB,IAAIgB,KAAK,SAAAC,GAAC,OACpB,kBAAC,EAAD,CACA7B,GAAI6B,EAAE7B,GACNiC,IAAKJ,EAAE7B,GACPG,KAAM0B,EAAE1B,KACRE,MAAOwB,EAAExB,MACTJ,QAAS,EAAKgB,uB,GAtEFiB,a,MCflBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a0a6cc89.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper justify-content-center\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return (\n  <h1 className=\"title\">{props.children}</h1>\n  );\n}\n\nexport default Title;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Card(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img id={props.id} onClick={props.onClick} alt={props.name} src={props.image} />\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Instructions(props) {\n  return <div className=\"instructions justify-content-center\">{props.children}</div>;\n}\n\nexport default Instructions;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Score(props) {\n  return (\n    <div className=\"score\">\n  <span>Score: {props.score}</span><span className=\"high-score\">High Score: {props.highscore}</span>\n  </div>\n  );\n}\n\nexport default Score;\n","import React, { Component } from \"react\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Card from \"./components/Card\";\nimport Instructions from \"./components/Instructions\";\nimport Score from \"./components/Score\";\n// import characters from \"./characters.json\";\nimport spCharacters from \"./southpark.json\";\n\n\n\n\nlet charArr = spCharacters;\n\n\nfunction shuffle(arr) {\n  arr.sort(() => Math.random() - 0.5);\n};\n\n\nclass App extends Component {\n  // Setting the component's initial state.\n  constructor(props) {\n    super(props);\n    this.state = {\n      score: 0,\n      highscore: 0,\n      arr: []\n    };\n\n  }\n  \n\n  // When the component mounts, shuffle the array the cards pull from.\n  componentDidMount() {\n    shuffle(charArr);\n    this.setState({\n      arr: charArr\n    })\n  }\n\n  // Event handler for when a card is clicked.\n  handleClick = (event) => {\n    event.preventDefault();\n    let thisCharId = event.target.id;\n    let index = charArr.findIndex(function(element) { \n      return element.id === parseInt(thisCharId, 10)} );\n\n    if (charArr[index].isclicked === \"true\") {\n      alert(\"You already clicked that one! Game over, try again!\");\n      charArr.map( x => {\n        return x.isclicked = \"false\"\n      });\n      if (this.state.highscore < this.state.score) {\n        this.setState({\n          highscore: this.state.score\n        });\n      }\n      shuffle(charArr);\n      this.setState({\n        score: 0,\n        arr: charArr\n        \n      });\n      \n    } else{\n      charArr[index].isclicked = \"true\";\n      shuffle(charArr);\n      this.setState({\n        score: this.state.score + 1,\n        arr: charArr\n      });\n    }\n   };\n  \n\nrender() {\n  return ( <div className=\"d-flex justify-content-center\">\n  <Wrapper>\n    <Title >Clicky Memory Game!</Title> \n    <br />\n    <Instructions>Click a character and get a point. Don't click the same character twice!</Instructions>\n    <br />\n    <Score score={this.state.score} highscore={this.state.highscore}></Score>\n    {this.state.arr.map( x => (\n      <Card\n      id={x.id}\n      key={x.id}\n      name={x.name}\n      image={x.image}\n      onClick={this.handleClick}\n    />\n    ))}\n    </Wrapper>\n    </div>\n  );\n}\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}